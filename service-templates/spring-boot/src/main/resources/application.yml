spring:
  application:
    name: service-template
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/insurance
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
  
  # JPA Configuration
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        format_sql: true
    show-sql: false
  
  # Flyway Migration Configuration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
  
  # Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: ${spring.application.name}
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  
  # OAuth2 Resource Server Configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: https://auth.insurance.com/
          jwk-set-uri: https://auth.insurance.com/.well-known/jwks.json

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /
  error:
    include-stacktrace: never

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health, info, prometheus, metrics
  endpoint:
    health:
      show-details: when_authorized
      probes:
        enabled: true
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
  tracing:
    sampling:
      probability: 1.0

# Logging Configuration
logging:
  level:
    root: INFO
    com.insurance: DEBUG
    org.springframework: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# OpenAPI Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operationsSorter: method
    tagsSorter: alpha

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
  jpa:
    hibernate:
      ddl-auto: update
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true

---
# Test Profile
spring:
  config:
    activate:
      on-profile: test
  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password: password
    driver-class-name: org.h2.Driver
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
  kafka:
    bootstrap-servers: ${embedded.kafka.brokerList}

---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
  jpa:
    hibernate:
      ddl-auto: validate
  devtools:
    restart:
      enabled: false
    livereload:
      enabled: false

logging:
  level:
    root: INFO
    com.insurance: INFO
    org.springframework: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: INFO 